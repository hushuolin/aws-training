{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Parameters": {
      "StreamName": {
        "Type": "String",
        "Description": "The name of the Kinesis Stream"
      },
      "ShardCount": {
        "Type": "Number",
        "Description": "Number of shards for the Kinesis stream",
        "Default": 1
      },
      "BucketName": {
        "Type": "String",
        "Description": "S3 Bucket Name"
      }
    },
    "Resources": {
      "KinesisStream": {
        "Type": "AWS::Kinesis::Stream",
        "Properties": {
          "Name": { "Ref": "StreamName" },
          "ShardCount": { "Ref": "ShardCount" }
        }
      },
      "LambdaExecutionRole": {
        "Type": "AWS::IAM::Role",
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Principal": { "Service": "lambda.amazonaws.com" },
                "Action": "sts:AssumeRole"
              }
            ]
          },
          "Policies": [
            {
              "PolicyName": "LambdaPolicy",
              "PolicyDocument": {
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Action": [
                      "logs:*",
                      "kinesis:GetRecords",
                      "kinesis:GetShardIterator",
                      "kinesis:DescribeStream",
                      "kinesis:ListStreams",
                      "s3:PutObject"
                    ],
                    "Resource": "*"
                  }
                ]
              }
            }
          ]
        }
      },
      "KinesisLambdaFunction": {
        "Type": "AWS::Lambda::Function",
        "Properties": {
          "FunctionName": "KinesisProcessorLambda",
          "Runtime": "python3.8",
          "Role": { "Fn::GetAtt": [ "LambdaExecutionRole", "Arn" ] },
          "Handler": "index.lambda_handler",
          "Code": {
            "ZipFile": {
              "Fn::Sub": "\nimport json\nimport base64\nimport boto3\ns3 = boto3.client('s3')\ndef lambda_handler(event, context):\n    for record in event['Records']:\n        payload = base64.b64decode(record['kinesis']['data']).decode('utf-8')\n        data = json.loads(payload)\n        bucket_name = '${BucketName}'\n        key = f\"data/{data['id']}.json\"\n        s3.put_object(Bucket=bucket_name, Key=key, Body=json.dumps(data))\n    return {'statusCode': 200, 'body': 'Success'}"
            }
          },
          "Timeout": 60
        }
      },
      "LambdaEventSourceMapping": {
        "Type": "AWS::Lambda::EventSourceMapping",
        "Properties": {
          "BatchSize": 100,
          "EventSourceArn": { "Fn::GetAtt": [ "KinesisStream", "Arn" ] },
          "FunctionName": { "Ref": "KinesisLambdaFunction" },
          "StartingPosition": "TRIM_HORIZON"
        }
      }
    },
    "Outputs": {
      "KinesisStreamName": {
        "Description": "The name of the Kinesis stream",
        "Value": { "Ref": "StreamName" }
      }
    }
  }
  