{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Resources": {
      "MySQSQueue": {
        "Type": "AWS::SQS::Queue",
        "Properties": {
          "VisibilityTimeout": 60
        }
      },
      "MySNSTopic": {
        "Type": "AWS::SNS::Topic"
      },
      "MySQSSubscription": {
        "Type": "AWS::SNS::Subscription",
        "Properties": {
          "TopicArn": { "Ref": "MySNSTopic" },
          "Endpoint": { "Fn::GetAtt": ["MySQSQueue", "Arn"] },
          "Protocol": "sqs"
        }
      },
      "EmailNotificationTopic": {
        "Type": "AWS::SNS::Topic",
        "Properties": {
          "DisplayName": "EmailNotificationTopic"
        }
      },
      "LambdaExecutionRole": {
        "Type": "AWS::IAM::Role",
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Principal": {
                  "Service": "lambda.amazonaws.com"
                },
                "Action": "sts:AssumeRole"
              }
            ]
          },
          "Policies": [
            {
              "PolicyName": "LambdaSQSAndSNSPolicy",
              "PolicyDocument": {
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Action": [
                      "logs:CreateLogGroup",
                      "logs:CreateLogStream",
                      "logs:PutLogEvents"
                    ],
                    "Resource": "*"
                  },
                  {
                    "Effect": "Allow",
                    "Action": [
                      "sqs:ReceiveMessage",
                      "sqs:DeleteMessage",
                      "sqs:GetQueueAttributes"
                    ],
                    "Resource": {
                      "Fn::GetAtt": ["MySQSQueue", "Arn"]
                    }
                  },
                  {
                    "Effect": "Allow",
                    "Action": [
                      "sns:Publish"
                    ],
                    "Resource": "*"
                  }
                ]
              }
            }
          ]
        }
      },
      "MyLambdaFunction": {
        "Type": "AWS::Lambda::Function",
        "Properties": {
          "FunctionName": "SQSToSNSLambda",
          "Runtime": "python3.8",
          "Role": { "Fn::GetAtt": ["LambdaExecutionRole", "Arn"] },
          "Handler": "lambda_function.lambda_handler",
          "Code": {
            "ZipFile": {
              "Fn::Sub": "\nimport json\nimport boto3\n\nsns_client = boto3.client('sns')\n\ndef lambda_handler(event, context):\n    # Log the received event\n    print(f'Event received: {json.dumps(event)}')\n\n    # Prepare a message to publish to the second SNS topic\n    message = 'Message received from SQS and SNS triggered Lambda, sending email via SNS'\n\n    try:\n        # Publish message to the second SNS topic\n        response = sns_client.publish(\n            TopicArn='${EmailNotificationTopic}',\n            Message=message,\n            Subject='Notification from Lambda via SNS'\n        )\n        print('Message sent to EmailNotificationTopic')\n    except Exception as e:\n        print(f'Error sending message: {str(e)}')\n\n    return {'statusCode': 200, 'body': 'Message sent successfully.'}"
            }
          },
          "Timeout": 60
        }
      },
      "SQSQueueLambdaTrigger": {
        "Type": "AWS::Lambda::EventSourceMapping",
        "Properties": {
          "BatchSize": 10,
          "EventSourceArn": { "Fn::GetAtt": ["MySQSQueue", "Arn"] },
          "FunctionName": { "Ref": "MyLambdaFunction" },
          "Enabled": true
        }
      }
    }
  }
  