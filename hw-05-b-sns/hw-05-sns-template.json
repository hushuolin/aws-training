{
  "Resources": {
    "SQSTriggerQueue": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "QueueName": "SQSTriggerQueue"
      }
    },
    "SNSMessageTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "TopicName": "SNSMessageTopic"
      }
    },
    "SQSSubscription": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "Protocol": "sqs",
        "Endpoint": {
          "Fn::GetAtt": [
            "SQSTriggerQueue",
            "Arn"
          ]
        },
        "TopicArn": {
          "Ref": "SNSMessageTopic"
        }
      }
    },
    "LambdaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": "LambdaExecutionRole",
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "LambdaPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "sns:Publish",
                    "logs:*",
                    "sqs:ReceiveMessage",
                    "sqs:DeleteMessage",
                    "sqs:GetQueueAttributes"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": "LambdaFunction",
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LambdaExecutionRole",
            "Arn"
          ]
        },
        "Code": {
          "ZipFile": {
            "Fn::Join": [
              "\n",
              [
                "import json",
                "import boto3",
                "",
                "def handler(event, context):",
                "    sns_client = boto3.client('sns')",
                "    response = sns_client.publish(",
                "        TopicArn='REPLACE_WITH_EMAIL_NOTIFICATION_TOPIC_ARN',",
                "        Message='This is a notification message from Lambda',",
                "        Subject='Lambda Notification'",
                "    )",
                "    return {",
                "        'statusCode': 200,",
                "        'body': json.dumps('Message sent!')",
                "    }"
              ]
            ]
          }
        },
        "Runtime": "python3.8"
      }
    },
    "SNSLambdaTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "TopicName": "SNSLambdaTopic"
      }
    },
    "SNSLambdaSubscription": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "Protocol": "lambda",
        "Endpoint": {
          "Fn::GetAtt": [
            "LambdaFunction",
            "Arn"
          ]
        },
        "TopicArn": {
          "Ref": "SNSMessageTopic"
        }
      }
    },
    "LambdaPermissionForSNS": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "LambdaFunction"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "sns.amazonaws.com",
        "SourceArn": {
          "Ref": "SNSMessageTopic"
        }
      }
    },
    "EmailNotificationTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "TopicName": "EmailNotificationTopic"
      }
    },
    "EmailSubscription": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "Protocol": "email",
        "Endpoint": "hu.shuo@northeastern.edu", 
        "TopicArn": {
          "Ref": "EmailNotificationTopic"
        }
      }
    }
    
  }
}
