Step 1: Create Stack and Update Stack
aws cloudformation create-stack --stack-name hw-05-sqs-sns-stack --template-body file://sqs-sns-template.json --capabilities CAPABILITY_IAM

aws cloudformation update-stack --stack-name hw-05-sqs-sns-stack --template-body file://sqs-sns-template.json --capabilities CAPABILITY_IAM

Step 2: Define the CloudFormation Template

1. SQS Queue (MySQSQueue): Defines an SQS queue that will receive messages.
2. SNS Topic (MySNSTopic): Defines an SNS topic that is used to trigger Lambda when a message is received in the SQS queue.
3. SNS Subscription (MySQSSubscription): Links the SQS queue to the SNS topic, so when a message is received in the queue, it triggers an event in SNS.
4. IAM Role (LambdaExecutionRole): Grants the Lambda function the necessary permissions to access logs, interact with SQS, and publish messages to SNS.
5. Lambda Function (MyLambdaFunction): A Python-based Lambda function that sends an email using the SMTP library. When the function is triggered, it sends a test email to the specified recipient using SMTP credentials.
6. SQS Queue Lambda Trigger (SQSQueueLambdaTrigger): Ensures that the Lambda function is invoked when a message is added to the SQS queue.

Key Points:
- SMTP Configuration: The Lambda function uses Python's smtplib to send emails. Ensure that you replace smtp.yourserver.com, your_email@example.com, and your_password with actual SMTP server details.
- IAM Role: The Lambda function is given permissions to log its activities, interact with SQS, and publish to SNS.
- Lambda Trigger: The trigger ensures that the Lambda function is invoked whenever a message is received in the SQS queue.